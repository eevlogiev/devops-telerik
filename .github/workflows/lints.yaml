name: CI Pipeline Testing

on:
    push:
        branches:
          - '*'
          - '!main'

jobs:
  editorconfig:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  pylint:
    runs-on: ubuntu-latest
#  strategy:
#     matrix:
#          python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
 #   - name: Set up Python ${{ matrix.python-version }}
    - uses: actions/setup-python@v3
#      with:
#        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
            python -m pip install --upgrade pip
            pip install pylint -r requirements.txt
    - name: Analysing the code with pylint
      run: |
            pylint --disable=all --enable=unused-import $(git ls-files 'app/*.py')
  
  black_formatter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        with:
            options: "--check --verbose"
            src: "./app"

  markdownlint-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
            files: ./README.md
#            config_file: .markdownlint.yaml
#            dot: true
#            ignore_files: examples/ignore/*
#            ignore_path: examples/.markdownlintignore
#            rules: examples/rules/custom.js

  unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - name: Install dependencies
      run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
    - name: Running unit test
      run: |
            cd app && python -m unittest app_test.py

  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}